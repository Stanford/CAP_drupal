<?php

/**
 * @file
 * Install, update, and uninstall functions for the module.
 */

/**
 * Implements hook_schema().
 */
function stanford_cap_api_profiles_schema() {
  $schema['cap_api_fields'] = array(
    'description' => 'Stores field name which was created while synchronizing CAP profiles with CAP server.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'field_name' => array(
        'description' => 'Field name.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
    'unique key' => array('field_name'),
  );

  $schema['cap_api_fields_map'] = array(
    'description' => 'Stores field name which was created while synchronizing CAP profiles with CAP server.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'field_name' => array(
        'description' => 'Field name.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'field_path' => array(
        'description' => 'Field path used by profile layout to identify this field.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'entity_type' => array(
        'description' => 'Entity type this field attached to.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'bundle' => array(
        'description' => 'Entity bundle this field attached to.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
    'unique key' => array('field_name', 'field_path', 'entity_type', 'bundle'),
  );

  $schema['cap_api_profiles'] = array(
    'description' => 'Stores information about CAP profiles.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'profile_id' => array(
        'description' => 'Profile ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'etag' => array(
        'description' => 'Etag.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'sync' => array(
        'description' => 'Does this profile needs to be synced?',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 1,
        'size' => 'tiny',
      ),
    ),
    'primary key' => array('id', 'profile_id', 'nid'),
  );

  $schema['cap_api_sync_groups'] = array(
    'description' => 'Stores information about CAP profiles groups that should be synced.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Group name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'Group type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'count' => array(
        'description' => 'How many profiles in this group.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'lastsynced' => array(
        'description' => 'Last synced timestamp.',
        'type' => 'int',
        'not null' => FALSE,
        'unsigned' => TRUE,
      ),
      'sync_children' => array(
        'description' => 'Flag indicating to import all the profiles in organization and any of its children.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id', 'name'),
  );

  $schema['cap_api_field_hashes'] = array(
    'description' => 'Stores field name which was overridden by user input and wont be synchronized while synchronizing CAP profiles with CAP server.',
    'fields' => array(
      'id' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'profile_id' => array(
        'description' => 'Profile ID.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'field_name' => array(
        'description' => 'Field name.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'hash' => array(
        'type' => 'blob',
        'serialize' => TRUE,
        'description' => 'A serialized array of the field data to be used as hash string.',
      ),
    ),
    'primary key' => array('id', 'profile_id'),
  );

  $schema['cap_api_import_cache'] = array(
    'description' => 'Stores downloaded data during batch or queued import before it\'s beed imported.',
    'fields' => array(
      'cid' => array(
        'description' => 'Record ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'importer' => array(
        'description' => 'Importer using the record.',
        'type' => 'varchar',
        'length' => 128,
      ),
      'data' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Raw JSON response from CAP.',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('cid'),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 *
 * Reads CLOBs field list into variable for later use.
 */
function stanford_cap_api_profiles_enable() {
  $file_name = '/stanford_cap_api_profiles_text_fields_list';
  $file = new SplFileObject(DRUPAL_ROOT . '/' . drupal_get_path('module', 'stanford_cap_api_profiles') . $file_name, 'r');
  $fields_list = array();
  foreach ($file as $field) {
    $fields_list[] = trim($field);
  }
  variable_set('stanford_cap_api_profiles_text_fields_list', array_filter($fields_list));
}

/**
 * Implements hook_update_N().
 *
 * Add sync_children column to cap_api_sync_groups table.
 */
function stanford_cap_api_profiles_update_7001() {
  db_add_field('cap_api_sync_groups', 'sync_children',
    array(
      'description' => 'Flag indicating to import all the profiles in organization and any of its children.',
      'type' => 'int',
      'size' => 'tiny',
      'not null' => TRUE,
      'default' => 0,
    )
  );
}

/**
 * Implements hook_update_N().
 *
 * Add cap_api_import_cache table for stanford_cap_api_profiles module.
 */
function stanford_cap_api_profiles_update_7002() {
  db_create_table('cap_api_import_cache', drupal_get_schema_unprocessed('stanford_cap_api_profiles', 'cap_api_import_cache'));
  return 'Add cap_api_import_cache table for stanford_cap_api_profiles module.';
}

/**
 * Implements hook_update_N().
 *
 * Update field 'data' schema.
 */
function stanford_cap_api_profiles_update_7003() {
  $table = 'cap_api_import_cache';
  $field = 'data';
  $schema = array(
    'type' => 'text',
    'size' => 'big',
    'description' => 'Raw JSON response from CAP.',
    'not null' => TRUE,
  );

  db_change_field($table, $field, $field, $schema);
}

/**
 * Implements hook_update_N().
 *
 * Update field 'etag' schema.
 */
function stanford_cap_api_profiles_update_7004() {
  $table = 'cap_api_profiles';
  $field = 'etag';
  $schema = array(
    'type' => 'varchar',
    'length' => 32,
    'not null' => TRUE,
    'default' => '',
  );

  db_change_field($table, $field, $field, $schema);
}
